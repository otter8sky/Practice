import numpy as np

pi = np.pi
G = 4*pi**2
Acs = [0, 0, 0]
a_e = 149597870.7
year_s = 31536e3
M_sun = 1.9885e30
c = 63072
r_g = 2 * G / c**2

# coefficients for RK-8
"''this is fixed''"
b_1 = 0.05
b_2 = 0
b_3 = 0
b_4 = 0
b_5 = 0
b_6 = 0
b_8 = 49 / 180  # we can change it!!
a_10_5 = 1 / 10.9  # we can change it!!
b_7 = -b_8 + 49 / 180
b_9 = 16 / 45
b_10 = 49 / 180
b_11 = 0.05

c_2 = 0.5
c_3 = 0.5
c_4 = (7 + np.sqrt(21)) / 14
c_5 = (7 + np.sqrt(21)) / 14
c_6 = 0.5
c_7 = (7 - np.sqrt(21)) / 14
c_8 = (7 - np.sqrt(21)) / 14
c_9 = 0.5
c_10 = (7 + np.sqrt(21)) / 14
c_11 = 1

a_2_1 = 0.5

a_3_1 = 0.25
a_3_2 = 0.25

a_4_1 = 1 / 7
a_4_2 = (-7 - 3 * np.sqrt(21)) / 98
a_4_3 = (21 + 5 * np.sqrt(21)) / 49

a_5_1 = (11 + np.sqrt(21)) / 84
a_5_2 = 0
a_5_3 = 4 * np.sqrt(21) / 63 + 2 / 7
a_5_4 = (21 - np.sqrt(21)) / 252

a_6_1 = (5 + np.sqrt(21)) / 48
a_6_2 = 0
a_6_3 = (9 + np.sqrt(21)) / 36
a_6_4 = (-231 + 14 * np.sqrt(21)) / 360
a_6_5 = (63 - 7 * np.sqrt(21)) / 80

a_7_1 = (10 - np.sqrt(21)) / 42
a_7_2 = 0

a_9_1 = 1 / 32
a_9_2 = 0

a_10_1 = 1 / 14
a_10_2 = 0

a_10_9 = 4 * np.sqrt(21) / 35 + 132 / 245

a_11_1 = 0
a_11_2 = 0
a_11_9 = (28 - 28 * np.sqrt(21)) / 45
a_11_10 = (49 - 7 * np.sqrt(21)) / 18

'''calculated'''

a_7_3 = (-24 / 35) * a_10_5 + (-136 / 105) + (-12 / 245) * a_10_5 * np.sqrt(21) + (656 / 2205) * np.sqrt(21)
a_7_4 = 7 + (-3 / 10) * a_10_5 * np.sqrt(21) + (-71 / 45) * np.sqrt(21) + (3 / 10) * a_10_5
a_7_5 = (-3 / 10) * a_10_5 + (3 / 10) * a_10_5 * np.sqrt(21) + (-43 / 6) + (169 / 105) * np.sqrt(21)
a_7_6 = (-277 / 735) * np.sqrt(21) + 181 / 105 + (12 / 245) * a_10_5 * np.sqrt(21) + (24 / 35) * a_10_5

a_8_1 = (180 * b_8 * np.sqrt(21) - 49 * np.sqrt(21) - 1800 * b_8 + 343) / (-7560 * b_8)
a_8_2 = 0
a_8_5 = (441 * a_10_5 * np.sqrt(21) - 3240 * a_7_5 * b_8 - 29 * np.sqrt(21) - 2205 * a_10_5 + 147) \
        / (-3240 * b_8)
a_8_6 = (72 * a_10_5 * np.sqrt(21) + 1620 * a_7_6 * b_8 - 29 * np.sqrt(21) - 441 * a_7_6 - 252 * a_10_5 + 119) \
        / (1620 * b_8)
a_8_3 = (900 * b_8 * np.sqrt(21) + 11340 * a_7_2 * b_8 + 1134 * a_8_6 * b_8 - 98 * np.sqrt(21) -
         3087 * a_7_2 - 4860 * b_8 + 686) / (-11340 * b_8)
a_8_7 = 49 / (1620 * b_8)
a_8_4 = (c_8 ** 2 / 2 - a_8_2 * c_2 - a_8_3 * c_3 - a_8_5 * c_5 - a_8_6 * c_6 - a_8_7 * c_7) / c_4

a_9_3 = (1 / 8) * a_10_5 * np.sqrt(21) - (1 / 8) * a_10_5 - (1 / 72) * np.sqrt(21) + 1 / 72
a_9_4 = (-49 / 288) + (-7 / 32) * a_10_5 * np.sqrt(21) + (7 / 288) * np.sqrt(21) + (49 / 32) * a_10_5
a_9_5 = (7 / 32) * a_10_5 * np.sqrt(21) + (-35 / 576) * np.sqrt(21) + (-49 / 32) * a_10_5 + 21 / 64
a_9_6 = (-1 / 8) * a_10_5 * np.sqrt(21) + (1 / 8) * a_10_5 + (1 / 72) * np.sqrt(21) + 5 / 36
a_9_7 = 91 / 576 + (7 / 192) * np.sqrt(21) + (-585 / 1568) * b_8 * np.sqrt(21) + (-405 / 224) * b_8
a_9_8 = (585 / 1568) * b_8 * np.sqrt(21) + (405 / 224) * b_8

a_10_3 = (-6 / 49) * a_10_5 * np.sqrt(21) + (-2 / 7) * a_10_5 + (2 / 147) * np.sqrt(21) + 2 / 63
a_10_4 = 1 / 9 - a_10_5
a_10_6 = (2 / 7) * a_10_5 + (-803 / 2205) + (6 / 49) * a_10_5 * np.sqrt(21) + (-59 / 735) * np.sqrt(21)
a_10_7 = 1 / 9 + (1 / 42) * np.sqrt(21) + (2295 / 686) * b_8 + (495 / 686) * b_8 * np.sqrt(21)
a_10_8 = (-2295 / 686) * b_8 + (-495 / 686) * b_8 * np.sqrt(21)

a_11_3 = (2 / 3) * a_10_5 * np.sqrt(21) + (-2 / 3) * a_10_5 + (-2 / 27) * np.sqrt(21) + 2 / 27
a_11_4 = (-7 / 6) * a_10_5 * np.sqrt(21) + (7 / 54) * np.sqrt(21) + (49 / 6) * a_10_5 - 49 / 54
a_11_5 = (7 / 27) * np.sqrt(21) - 77 / 54 + (-49 / 6) * a_10_5 + (7 / 6) * a_10_5 * np.sqrt(21)
a_11_6 = (2 / 3) * a_10_5 - 64 / 135 + (-2 / 3) * a_10_5 * np.sqrt(21) + (94 / 135) * np.sqrt(21)
a_11_7 = 7 / 18 + (-265 / 98) * b_8 * np.sqrt(21) + (-215 / 14) * b_8
a_11_8 = (265 / 98) * b_8 * np.sqrt(21) + (215 / 14) * b_8

a_list = [[0],
          [a_2_1],
          [a_3_1, a_3_2],
          [a_4_1, a_4_2, a_4_3],
          [a_5_1, a_5_2, a_5_3, a_5_4],
          [a_6_1, a_6_2, a_6_3, a_6_4, a_6_5],
          [a_7_1, a_7_2, a_7_3, a_7_4, a_7_5, a_7_6],
          [a_8_1, a_8_2, a_8_3, a_8_4, a_8_5, a_8_6, a_8_7],
          [a_9_1, a_9_2, a_9_3, a_9_4, a_9_5, a_9_6, a_9_7, a_9_8],
          [a_10_1, a_10_2, a_10_3, a_10_4, a_10_5, a_10_6, a_10_7, a_10_8, a_10_9],
          [a_11_1, a_11_2, a_11_3, a_11_4, a_11_5, a_11_6, a_11_7, a_11_8, a_11_9, a_11_10]]
b_list = [b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11]
c_list = [c_2, c_3, c_4, c_5, c_6, c_7, c_8, c_9, c_10, c_11]


# a_list = [[0],
#           [0.5],
#           [0, 0.5],
#           [0, 0, 1]
# ]
#
# b_list = [1/6,
#           1/3,
#           1/3,
#           1/6
# ]